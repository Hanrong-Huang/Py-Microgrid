# Py-Microgrid Structure 

```
hopp/
├── tools/
│   ├── analysis/
│   │   └── bos/
│   │       ├── __init__.py
│   │       ├── cost_calculator.py
│   │       ├── economic_calculator.py        # New: LCOE and financial calculations
│   │       └── ...
│   ├── optimization/
│   │   ├── __init__.py
│   │   ├── candidate.py
│   │   ├── load_analyzer.py                 # New: Flexible load management (20% flexibility)
│   │   ├── system_optimizer.py              # New: Hybrid system optimization
│   │   └── ...
│   └── ...
├── utilities/
│   ├── __init__.py
│   ├── utilities.py
│   ├── config_manager.py                    # New: YAML configuration management
│   └── ...
├── simulation/
│   ├── technologies/
│   │   ├── grid.py                          # Modified: Enhanced genset modeling
│   │   └── dispatch/
│   │       └── power_storage/
│   │           ├── predictive_demand_response_battery_dispatch.py  # New: Predictive battery dispatch
│   │           └── ...
│   ├── resource_files/
│   │   ├── __init__.py
│   │   ├── solar/                           # Directory for solar data
│   │   ├── wind/                           # Directory for wind data
│   │   ├── resource_data_manager.py         # New: Resource data downloading
│   │   └── ...
│   └── ...
└── examples/
    └── parallel_simulations/
        └── Py-Microgrid_example/
            └── simulation_chunk_0.ipynb      # Example implementation

Key Components and Changes:

1. Configuration Management:
   - utilities/config_manager.py
   - Handles YAML configuration files with backup and validation
   - Safe loading and saving of configurations

2. Economic Analysis:
   - tools/analysis/bos/economic_calculator.py
   - Calculates LCOE, NPC, and component costs
   - Handles demand penalty calculations
   - Manages project financial parameters

3. Load Management and Optimization:
   - tools/optimization/load_analyzer.py
   - Implements 20% flexible load management
   - Optimizes load shifting and battery charging
   - Calculates performance metrics

4. System Optimization:
   - tools/optimization/system_optimizer.py
   - Optimizes component sizes (PV, wind, battery, genset) to minimize LCOE
   - Integrates with simulation and economic analysis
   - Handles multi-parameter optimization using Nelder-Mead algorithm

5. Resource Management:
   - simulation/resource_files/resource_data_manager.py
   - Downloads and manages solar/wind resource data
   - Handles API interactions with NREL and NASA

6. Enhanced Grid/Genset Modeling:
   - simulation/technologies/grid.py (Modified)
   - Improved genset operational modeling 
   - Enhanced cost calculations
   - Better integration with optimization

7. Advanced Battery Dispatch:
   - simulation/technologies/dispatch/power_storage/predictive_demand_response_battery_dispatch.py
   - Implements predictive demand response
   - Optimizes battery charging/discharging
   - Integrates with flexible load management

8. Example Implementation:
   - examples/parallel_simulations/scripts_modularised/simulation_chunk_0.ipynb
   - Demonstrates full system optimization
   - Shows integration of all components
   - Users can choose a dispatch strategy 
   - Dispatch options are: 'predictive_demand_response', 'heuristic_load_following', 'heuristic', 'one_cycle_heuristic', 'simple', 'non_convex_LV', 'convex_LV'
   - Users can enable/disable flexible load

Key Features:
- Flexible load management (20% load reduction capability)
- Predictive demand response for battery dispatch
- Enhanced genset modeling and cost calculations
- Integrated optimization of all system components
- Resource data management with caching
- Comprehensive economic analysis
- Safe configuration handling

Each component maintains compatibility with existing HOPP functionality while adding new capabilities for hybrid system optimization and flexible demand management.
```

This structure shows all the major modifications and additions to HOPP, including:
1. The grid.py modifications for better genset modeling
2. The new predictive demand response battery dispatch
3. The flexible load capability in the load analyzer
4. How these components interact with each other

All components follow HOPP's architectural patterns while introducing new functionality for hybrid system optimization and flexible demand management.
